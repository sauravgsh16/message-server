Server:
    1) Functionality to drop queue


Exchange:
    Sender:
        Declare-exchange:-
            1) Type of exchange
                - fanout
                - P2P
            2) After declaration of exchange - implement Data Store for the type.
        Publish:-
            1) Store data in Data Store based on exchange.
            2) If queue is already binded to the exchange - then directly push
               data to the queue.
    
    Receiver:
        Create-Queue:-
            Create new queue to consume data from.
            Can be created with a WithCancel context. When the consumer is
            closed, the queue can be dropped.
        Bind-Queue:-
            Bind the created queue to the exchange. If no exchange then throw
            error
        Consumer:-
            1) Create a channel and give channel to user, to consume data from.
            2) Needs to pass queue name, so that msgs from only that queue will
               be sent to the channel.
            3) Close functionality on consumer. Close channel. Once channel is
               closed, we drop the associated queue.
    Important Note :- Need to define at what stage the data from exchange is
                      pushed to the queue for consumption.